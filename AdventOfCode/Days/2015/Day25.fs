namespace AdventOfCode.Days.Y2015

/// Day 25: Let It Snow
/// https://adventofcode.com/2015/day/25
/// Merry Christmas!
module Day25 =

    let Seed = 20_151_125I
    let M = 252_533I
    let R = 33_554_393I
    
    let getCode (row, column) = 
        let (row, column) = (row - 1, column - 1) // Make zero-based

        // First col sequence is 1, 2, 4, 7, 11, 16, ...
        let getFirstColValue row = row * (row + 1) / 2

        // Find first row value for cell diagonally down-left from target cell and
        // add column difference as each cell increases by 1 going diagonally up-right
        let index = getFirstColValue (row + column) + column

        // The first code is 20151125. After that, each code is generated by taking the previous one,
        // multiplying it by 252533, and then keeping the remainder from dividing that value by 33554393.
        // Seed |> Seq.unfold (fun x -> Some(x, (x * M) % R)) |> Seq.item index

        // Using ModPow rather than unfolding ~4.4 million times takes execution time from
        // 350ms to 0.0004ms - a decent improvement!
        (bigint.ModPow(M, bigint index, R) * Seed) % R

    // To continue, please consult the code grid in the manual.
    // Enter the code at row 2981, column 3075.
    let Part1() = getCode (2_981, 3_075)

    // Start weather machine!
    let Part2() = 1